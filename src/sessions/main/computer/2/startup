local CNAME = "Core"
local CVERSION = "1.0"
local CBUILD = 44
local CURL = "https://raw.githubusercontent.com/danielmills/Core/master/release/current"
local CDATA = {}
local CLOCAL
local CBASE = "https://raw.githubusercontent.com/danielmills/Core/master/src/sessions/main/computer/0/"
local CSTRUCTURE = {"/core", "/core/lib", "/core/urom"}

local ww,hh = term.getSize()

function launch()
  term.setBackgroundColor(colors.cyan)
  term.clear()
  term.setBackgroundColor(colors.blue)
  term.write("Installing Core")
  term.setCursorPos(1,1)
  if needsStructure() then git() end
  
  print(CNAME.." Version "..CVERSION.." Build "..CBUILD)
  shell.run("/launcher")
end

function needsStructure()
  local u = false
  print("Checking structure... ")
  for i,v in ipairs(CSTRUCTURE) do
    write(v.."... ")
    if fs.exists(v) then
      term.setTextColor(colors.green) write(" EXISTS. ") term.setTextColor(colors.white)
      if fs.isDir(v) then
        local list = fs.list(v)
        if list then
          if #list > 0 then
            term.setTextColor(colors.green) print(" FILLED.") term.setTextColor(colors.white)
          else
            term.setTextColor(colors.red) print(" EMPTY.") term.setTextColor(colors.white)
            u = true
          end
        else
          term.setTextColor(colors.red) print(" EMPTY.") term.setTextColor(colors.white)
          u = true
        end
      end
    else 
      term.setTextColor(colors.red) print(" NOTFOUND.") term.setTextColor(colors.white)
      u = true
    end
  end
  
  if u then
    term.setTextColor(colors.orange) print("Invalid Structure. First Time?") term.setTextColor(colors.white)
  else
    term.setTextColor(colors.green) print("Valid Structure. Good to go.") term.setTextColor(colors.white)
  end
  return u
end

function git()
  local u = false
  local p = 0.0
  term.setTextColor(colors.orange) print("Gathering requirements from repository... ") term.setTextColor(colors.white)
  local required = get(CURL)
  local spc = " "
  local sppc = spc:rep(ww)
  
  if required then
    for i,v in ipairs(required) do
      p = i / #required *100
      term.setBackgroundColor(colors.cyan) term.clear() term.setCursorPos(2, 2) term.setBackgroundColor(colors.blue)
                              term.write("                 Installing Core                ") term.setBackgroundColor(colors.white)
      term.setCursorPos(2, 3) term.write("                                                ")
      term.setCursorPos(2, 4) term.write("                                                ")
      term.setCursorPos(2, 5) term.write("                                                ")
      term.setCursorPos(2, 6) term.write("                                                ")
      term.setCursorPos(2, 7) term.write("                                                ")
      term.setCursorPos(2, 8) term.write("                                                ")
      term.setCursorPos(2, 9) term.write("                                                ")
      
      term.setBackgroundColor(colors.lightGray)
      term.setTextColor(colors.black)
      term.setCursorPos(3,5)
      write(spc:rep(46)) --term.scroll(1)
      term.setBackgroundColor(colors.green) term.setCursorPos(3,5)
      write(spc:rep(46*p/100))
      term.setCursorPos(3,7)
      term.setTextColor(colors.black) term.setBackgroundColor(colors.white)
      write(p)
      
      term.setTextColor(colors.black)
      term.setBackgroundColor(1)
      
      if v:sub(1,1) == "B" then CBUILD = v:sub(2) 
      elseif v:sub(1,1) == "V" then CVERSION = v:sub(2) 
      elseif v:sub(1,1) == "$" then CBASE = v:sub(2) else
        if v:sub(1,CBASE:len()) == CBASE then 
          local f = fs.open(v:sub(CBASE:len()), "w")
          local d = get(v)
          term.setTextColor(colors.black) term.setBackgroundColor(colors.white) term.setCursorPos(3,6)
          write("DOWNLOAD: "..v:sub(1,35).."...")
          if d and f then
            write("DOWNLOADED: "..v:sub(1,31).."...")
            for j,w in ipairs(d) do
              f.writeLine(w)
              term.setTextColor(colors.black) term.setBackgroundColor(colors.white) term.setCursorPos(3,6)
              write("WRITE: "..w:sub(1,35).."...")
            end
            term.setTextColor(colors.black) term.setBackgroundColor(colors.white) term.setCursorPos(3,6)
            write("SAVE: "..v:sub(1,35).."...")
            f.flush()
            write("CLOSE: "..v:sub(1,35).."...")
            f.close()            
          end
        end
      end
    end
  else
    term.setTextColor(colors.red) print("Download failed. Check Internet Connection") 
    print("Also, check https://github.com/danielmills/Core for architecture changes.")
    print("Redownload the pastebin, if all else fails.") term.setTextColor(colors.white)
    return false
  end
end

function get(url)
  term.setCursorPos(3,4)
  write(url:sub(CBASE:len()))
  --term.scroll(1)
  local resp = http.get(url)
  
  if resp then  
    local mResp = {}
    
    while true do
      local v = resp.readLine()
      if v then table.insert(mResp, v) else break end
    end
    
    resp.close()
    return mResp
  else

  end
end

launch()