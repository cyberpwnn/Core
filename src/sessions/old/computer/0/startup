local CVERSION
local CBUILD
local CCOMMIT

local DURL = "https://raw.githubusercontent.com/danielmills/Core/master/release/src/core/system/version/reference"
local IURL = "https://raw.githubusercontent.com/danielmills/Core/master/release/src/core/system/version/committed"
local SHELL = "/core/system/boot/shell"

local DBASE = ""
local DLIST = {}
local LOCAL = {}
  LOCAL.REFERENCE = "/core/system/version/reference"
  LOCAL.COMMITTED = "/core/system/version/committed"
  
local updateCheck = true

function launch()
  if not installed() then install() end
  if not updated() then update() end
  shell.run(SHELL,CVERSION,CBUILD,CCOMMIT)
end

function updated()
  if installed() then
    local cData = getl(IURL)
    if cData then
      if tonumber(cData[2]:sub(2)) > tonumber(CBUILD) then
        update()
      end
    end
  else install() end
end

function update()
  install()
end

function installed()
  if fs.exists(LOCAL.COMMITTED) then
    local file = fs.open(LOCAL.COMMITTED, "r")
    if file then
      while true do
        local line = file.readLine()
        if line then
          if line:sub(1,1) == "V" then CVERSION = line:sub(2)
          elseif line:sub(1,1) == "B" then CBUILD = line:sub(2)
          elseif line:sub(1,1) == "C" then CCOMMIT = line:sub(2)
          else end
        else file.close() file.close() end
        if CVERSION and CBUILD and CCOMMIT then return true end
      end
    end
  end
  return false
end

function install()
  DLIST = getl(DURL)
  if DLIST then
    local wset = ""
    for i,v in ipairs(DLIST) do
      if v:sub(1,1) == "@" then wset = v:sub(2) end
      if v:sub(1,1) == ">" then
        local base = v:sub(2)
        local data = get(base)        
        local file = fs.open(base:sub(#wset),"w")
        if file then
          if data then file.write(data) end
          file.flush()
          file.close()
        end
      end
    end
  else
    
  end
end

function get(url)
  local response = http.get(url)
      
  if response then      
    local sResponse = response.readAll()
    response.close()
    return sResponse
  else
    return nil
  end
end

function getl(url)
  local response = http.get(url)
      
  if response then      
    sResponse = {}
    while true do
      local vResponse = response.readLine()
      if vResponse then 
        table.insert(sResponse, vResponse) 
      else response.close() break end
    end
    return sResponse
  else
    return nil
  end
end

launch()